version: '3.8'

services:

  server:
    image: ghcr.io/silkkycloud/searxng:latest
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    hostname: searxng
    networks:
      - public
      - backend
      - proxy_net
    deploy:
      mode: replicated
      replicas: 6
      placement:
        max_replicas_per_node: 2
        constraints:
          - "node.labels.web_server == true"
      update_config:
        failure_action: rollback
      resources:
        limits:
          cpus: '4'
          memory: 6GB
        reservations:
          cpus: '0.2'
          memory: 1G
      labels:
        - "traefik.enable=true"
        # Searx Router
        - "traefik.http.routers.searx.rule=Host(`${HOSTNAME}`)"
        - "traefik.http.routers.searx.entrypoints=websecure"
        - "traefik.http.routers.searx.tls=true"
        - "traefik.http.routers.searx.middlewares=searx-global-headers,searx-headers"
        - "traefik.http.routers.searx.service=searx-service"
        # API Router
        - "traefik.http.routers.searx-api.rule=Host(`${HOSTNAME}`) && PathPrefix(`/config`, `/status`)"
        - "traefik.http.routers.searx-api.entrypoints=websecure"
        - "traefik.http.routers.searx-api.tls=true"
        - "traefik.http.routers.searx-api.middlewares=searx-global-headers,searx-api-headers"
        - "traefik.http.routers.searx-api.service=searx-service"
        # Static Router
        - "traefik.http.routers.searx-static.rule=Host(`${HOSTNAME}`) && PathPrefix(`/static`)"
        - "traefik.http.routers.searx-static.entrypoints=websecure"
        - "traefik.http.routers.searx-static.tls=true"
        - "traefik.http.routers.searx-static.middlewares=searx-global-headers,searx-static-headers"
        - "traefik.http.routers.searx-static.service=searx-service"
        # Image Proxy Router
        - "traefik.http.routers.searx-image-proxy.rule=Host(`${HOSTNAME}`) && PathPrefix(`/image_proxy`)"
        - "traefik.http.routers.searx-image-proxy.entrypoints=websecure"
        - "traefik.http.routers.searx-image-proxy.tls=true"
        - "traefik.http.routers.searx-image-proxy.middlewares=searx-image-proxy-headers"
        - "traefik.http.routers.searx-image-proxy.service=searx-service"
        # Global Headers
        - "traefik.http.middlewares.searx-global-headers.headers.frameDeny=true"
        - "traefik.http.middlewares.searx-global-headers.headers.contentSecurityPolicy=upgrade-insecure-requests; default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; form-action 'self'; font-src 'self'; frame-ancestors 'self'; base-uri 'self'; connect-src 'self' https://overpass-api.de; img-src 'self' data: https://*.tile.openstreetmap.org; frame-src https://www.youtube-nocookie.com https://player.vimeo.com https://www.dailymotion.com https://www.deezer.com https://www.mixcloud.com https://w.soundcloud.com https://embed.spotify.com"
        - "traefik.http.middlewares.searx-global-headers.headers.customResponseHeaders.X-Robots-Tag=noindex, noarchive, nofollow"
        # Searx Headers
        - "traefik.http.middlewares.searx-headers.headers.customResponseHeaders.Cache-Control=no-cache, no-store"
        - "traefik.http.middlewares.searx-headers.headers.customResponseHeaders.Pragma=no-cache"
        # API Headers
        - "traefik.http.middlewares.searx-api-headers.headers.accessControlAllowOriginList=*"
        - "traefik.http.middlewares.searx-api-headers.headers.accessControlAllowMethods=GET, OPTIONS"
        # Static Headers
        - "traefik.http.middlewares.searx-static-headers.headers.customResponseHeaders.Cache-Control=public, max-age=31536000"
        # Image Proxy Headers
        - "traefik.http.middlewares.searx-image-proxy-headers.headers.contentSecurityPolicy=default-src 'none'; img-src 'self' data:"
        # Service
        - "traefik.http.services.searx-service.loadbalancer.server.port=8080"
        - "traefik.http.services.searx-service.loadbalancer.sticky.cookie=true"
        - "traefik.http.services.searx-service.loadbalancer.sticky.cookie.secure=true"
        - "traefik.http.services.searx-service.loadbalancer.sticky.cookie.samesite=strict"
    environment:
      - HOSTNAME=${HOSTNAME}
      - SECRET_KEY=${SECRET_KEY}

  redis:
    image: redis:6.2.6-alpine
    hostname: redis
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.web_server == true"
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 50M

networks:
  public:
    external: true
  proxy_net:
    external: true

  backend:
    driver: overlay
    internal: true
    driver_opts:
      encrypted: "true"
      com.docker.network.driver.mtu: 1450
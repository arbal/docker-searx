version: '3.8'

services:

  server:
    image: ghcr.io/silkkycloud/searxng:latest
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    hostname: searx
    networks:
      - backend
      - proxy_net
    deploy:
      mode: replicated
      replicas: 6
      placement:
        max_replicas_per_node: 2
        constraints:
          - "node.labels.web_server == true"
      update_config:
        failure_action: rollback
      resources:
        limits:
          cpus: '4'
          memory: 8GB
        reservations:
          cpus: '0.2'
          memory: 1G
    environment:
      - HOSTNAME=${HOSTNAME}
      - SECRET_KEY=${SECRET_KEY}
      - MORTY_KEY=${MORTY_KEY}

  filtron:
    image: ghcr.io/silkkycloud/filtron:latest
    command: -target searx:8080
    read_only: true
    cap_drop:
      - ALL
    hostname: filtron
    networks:
      - public
      - backend
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 100M
      labels:
        - "traefik.enable=true"
        # Filtron Router
        - "traefik.http.routers.filtron.rule=Host(`${HOSTNAME}`)"
        - "traefik.http.routers.filtron.entrypoints=websecure"
        - "traefik.http.routers.filtron.tls=true"
        - "traefik.http.routers.filtron.middlewares=filtron-headers"
        - "traefik.http.routers.filtron.service=filtron-service"
        # Filtron Headers
        - "traefik.http.middlewares.filtron-headers.headers.contentSecurityPolicy=upgrade-insecure-requests; default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; form-action 'self'; font-src 'self'; frame-ancestors 'self'; base-uri 'self'; connect-src 'self' https://overpass-api.de; img-src 'self' data: https://*.tile.openstreetmap.org; frame-src https://www.youtube-nocookie.com https://player.vimeo.com https://www.dailymotion.com https://www.deezer.com https://www.mixcloud.com https://w.soundcloud.com https://embed.spotify.com"
        # Service
        - "traefik.http.services.filtron-service.loadbalancer.server.port=4040"

  morty:
    image: ghcr.io/silkkycloud/morty:latest
    read_only: true
    cap_drop:
      - ALL
    hostname: morty
    networks:
      - public
    deploy:
      mode: replicated
      replicas: 3
      placement:
        max_replicas_per_node: 1
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.01'
          memory: 50M
      labels:
        - "traefik.enable=true"
        # Router
        - "traefik.http.routers.morty.rule=Host(`${HOSTNAME}`) && PathPrefix(`/morty`)"
        - "traefik.http.routers.morty.entrypoints=websecure"
        - "traefik.http.routers.morty.tls=true"
        - "traefik.http.routers.morty.middlewares=morty-headers"
        - "traefik.http.routers.morty.service=morty-service"
        # Middleware
        - "traefik.http.middlewares.morty-headers.headers.contentSecurityPolicy=default-src 'none'; style-src 'self' 'unsafe-inline'; form-action 'self'; frame-ancestors 'self'; base-uri 'self'; img-src 'self' data:; font-src 'self'; frame-src 'self'"
        # Service
        - "traefik.http.services.morty-service.loadbalancer.server.port=3000"
    environment:
      - MORTY_KEY=${MORTY_KEY}
      - MORTY_ADDRESS=0.0.0.0:3000

  redis:
    image: redis:6.2.6-alpine
    hostname: redis
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.web_server == true"
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 50M

networks:
  public:
    external: true
  proxy_net:
    external: true

  backend:
    driver: overlay
    internal: true
    driver_opts:
      encrypted: "true"
      com.docker.network.driver.mtu: 1450
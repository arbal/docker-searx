[uwsgi]
# Who will run the code
uid = searxng
gid = searxng

# Number of workers (usually CPU count)
workers = %k
threads = 4

# The right granted on the created socket
chmod-socket = 666

# Plugin to use and interpretor config
single-interpreter = true
master = true
plugin = python3
lazy-apps = true
enable-threads = true

# Module to import
module = searx.webapp

# Virtualenv and python path
pythonpath = /searxng/
chdir = /searxng/searx/

# automatically set processes name to something meaningful
auto-procname = true

# Disable logging for privacy
disable-logging = true

# Set the max size of a request (request-body excluded)
buffer-size = 8192

# But keep errors for 2 days
touch-logrotate = /config/uwsgi-logrotate
unique-cron = 15 0 -1 -1 -1 { touch /config/uwsgi-logrotate  }
log-backupname = /config/uwsgi.log.1
logto = /config/uwsgi.log

# No keep alive
# See https://github.com/searx/searx-docker/issues/24
add-header = Connection: close

# uwsgi serves the static files
# expires set to one day as Flask does
static-map = /static=/searxng/searx/static
static-expires = /* 864000
static-gzip-all = True
offload-threads = %k

# Cache
cache2 = name=searxngcache,items=2000,blocks=2000,blocksize=4096,bitmap=1